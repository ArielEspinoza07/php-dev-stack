name: CI - Docker Core Validation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  environment-check:
    name: 📊 Validate Docker Environment
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.4
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: 💾 Checkout code
        uses: actions/checkout@v4

      - name: 📂 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Copy environment file
        run: cp .env.example .env

      - name: 🔍 Show Dockerfile being built
        run: cat docker/php/$(grep PHP_VERSION .env | cut -d '=' -f2)/Dockerfile

      - name: 💪 Build PHP image (from .env)
        run: |
          PHP_VERSION=$(grep PHP_VERSION .env | cut -d '=' -f2)
          docker build -t php-custom-test \
          -f docker/php/$PHP_VERSION/Dockerfile \
          docker/php/$PHP_VERSION

      - name: 📄 Verify PHP version
        run: |
          docker run --rm php-custom-test php -v

      - name: 🔖 Check Composer version
        run: |
          docker run --rm php-custom-test composer --version

      - name: 📚 Check PHP extensions
        run: |
          docker run --rm php-custom-test php -m
