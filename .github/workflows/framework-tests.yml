name: Framework - Laravel / Symfony Test

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'src/**'
      - 'docker/**'
      - '.env*'

jobs:
  laravel-test:
    name: 📊 Test Laravel
    runs-on: ubuntu-latest

    steps:
      - name: 💾 Checkout code
        uses: actions/checkout@v4

      - name: 📂 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🤖 Install Laravel if src/ is empty
        run: |
          if [ -z "$(ls -A src)" ]; then
            docker run --rm \
            -v ${{ github.workspace }}/src:/src \
            -w /src \
            composer create-project laravel/laravel laravel-test
          fi

      - name: 💪 Build Docker environment
        run: |
          cp .env.example .env
          make up-mysql

      - name: 🔧 Run Laravel Artisan about
        working-directory: src/laravel-test
        run: |
          make run-php-command command="artisan about"

      - name: ❌ Teardown
        run: make down

  symfony-test:
    name: 📊 Test Symfony
    runs-on: ubuntu-latest

    steps:
      - name: 💾 Checkout code
        uses: actions/checkout@v4

      - name: 📂 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🤖 Install Symfony if src/ is empty
        run: |
          if [ -z "$(ls -A src)" ]; then
            docker run --rm \
            -v ${{ github.workspace }}/src:/src \
            -w /src \
            composer create-project symfony/skeleton symfony-test
          fi

      - name: 💪 Build Docker environment
        run: |
          cp .env.example .env
          make up-pgsql

      - name: 🔧 Run Symfony console about
        working-directory: src/symfony-test
        run: |
          make run-php-command command="bin/console about"

      - name: ❌ Teardown
        run: make down